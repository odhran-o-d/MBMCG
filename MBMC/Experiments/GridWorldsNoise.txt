switches.main.runController = true;
switches.main.provide_agent = true;
switches.main.propagation_noise = true;
switches.main.agentGoalPositions = 'random';

switches.diagnostic.track_sensory = true;
switches.diagnostic.track_SA = true;
switches.diagnostic.resultMat = true;
switches.diagnostic.stepsMat = true;
switches.diagnostic.processingMat = false;
switches.diagnostic.total_steps = true;
switches.diagnostic.total_processing = true;

switches.control_sw.goalIterations = 100;
switches.control_sw.controller_steps = 100;
switches.control_sw.useMaxPropagate = false;
switches.control_sw.useProbPropagate = false;
switches.control_sw.initial_sensory_firing = true;
switches.control_sw.sensoryreward2SA = true;
switches.control_sw.SAreward_bandpass = true;
switches.control_sw.SAreward_check = 'fatal';
switches.control_sw.propagation = 'deterministic';
switches.control_sw.SAthreshold = 'TopAndBottom';
switches.control_sw.EIbalance = false;
switches.control_sw.SAdivisive = true;
switches.control_sw.gate_update = true;
switches.control_sw.gate_threshold = true;
switches.control_sw.motor_activate = true;
switches.control_sw.reset_sensory = true;
switches.control_sw.reset_reward = true;
switches.control_sw.reset_SA = true;
switches.control_sw.reset_motor = true;
switches.control_sw.reset_gate = true;

switches.params.gate_inhibition = 0.6;
switches.params.state_noise = 0;
switches.params.propagation_noise = 0.1;
switches.params.motor_inhibition = 0.2;
switches.params.SAthresholdTop = 1;
switches.params.SAthresholdBottom = 0.2;
switches.params.normalisation_threshold = 1;
switches.params.sensory_threshold = 1; % Necessary to adjust these to compensate for different
switches.params.motor_threshold = 0.25; % numbers of synapses to sensory and motor cells.
switches.params.trace_threshold = 4; %0.01
switches.params.sensorytogate_threshold = 0.5;
switches.params.SAtogate_threshold = 0.5;
switches.params.gatebandpass_low = 0.1;
switches.params.gatebandpass_high = 0.95;