#  DAKOTA INPUT FILE - dakota_matlab_rosenbrock.in
#  This sample Dakota input file optimizes the Rosenbrock function.
#  See p. 95 in Practical Optimization by Gill, Murray, and Wright.
#  
# Here we use either the 
#   matlab_rosen_bb_simulator.sh (Unix) or 
#   matlab_rosen_bb_simulator.vbs (Windows)
# analysis driver that calls Matlab for each function evaluation


environment,
tabular_data

method,
#seed = 11011011

multidim_parameter_study 
partitions = 9


	
variables,
  continuous_design = 3  
  cdv_initial_point               0.6                 0.01                 0.2      
  cdv_lower_bounds                    0.5             0.01                    0.01    
  cdv_upper_bounds                    1        1                            1         
  cdv_descriptor           'gate_inhibition'   'propagation_noise'   'motor_threshold'   

interface,					

# common options
	fork,
	parameters_file = 'params.in'		
	results_file    = 'results.out'		

# Use this line for Linux
	analysis_driver = 'GridWorldsNoiseTrials.sh'	

# OR use this line for Windows
##	analysis_driver = 'cscript matlab_rosen_bb_simulator.vbs'	

# POSSIBLY use the following to perform 2 or more simultaneous Matlab
# evaluations.  I haven't researched whether the automation
# server supports this asynchronously, or whether one evaluation will
# block the next (seems to work though)
##       asynchronous                            
##       evaluation_concurrency = 2
##	 file_tag                                
# use this to keep parameters/results files around if you wish (when
# using file_tag only)
##	file_save                               


responses,                                      
	num_objective_functions = 1  
    sense = 'max'
 	no_gradients
	no_hessians
