switches.main.runLearner = true;

switches.diagnostic.track_SA = true;
switches.diagnostic.track_sensory = true;
switches.diagnostic.decodeSA = true;

switches.learner_sw.steps = 5000;
switches.learner_sw.initial_sensory_update = true;
switches.learner_sw.activate_motor = true;
switches.learner_sw.sensorymotor_SA = true;
switches.learner_sw.sensorymotor_bandpass = true;
switches.learner_sw.actionWTA = true;
switches.learner_sw.sensorymotor2SA_update = true;
switches.learner_sw.SASA_Hebb_update = true;
switches.learner_sw.motor2SA_update = true;
switches.learner_sw.motorSA_normalise = true;
switches.learner_sw.SA_reset = false;
switches.learner_sw.sensory_reset = true;
switches.learner_sw.action_reset = true;

switches.params.sensorytoSA_dilution = 1; %0.3
switches.params.motortoSA_dilution = 1; %0.2
switches.params.SAtomotor_dilution = 1; %0.2
switches.params.chunk_dilution = 1;
switches.params.chunk_weights = 0.1;
switches.params.sensorytogate_dilution = 1;
switches.params.gatetomotor_dilution = 1;
switches.params.SAtogate_dilution = 1;
switches.params.trace_learningRate = 10; %0.1; %0.001; % 0.0001
switches.params.gate_sparseness = 99;
switches.params.gate_slope = 1000;
switches.params.state_noise = 0.002;
switches.params.normalisation_threshold = 1;
switches.params.sensory_threshold = 1; % Necessary to adjust these to compensate for different
switches.params.motor_threshold = 0.25; % numbers of synapses to sensory and motor cells.
switches.params.trace_threshold = 4; %0.01
switches.params.sensorytogate_threshold = 0.5;
switches.params.SAtogate_threshold = 0.5;
switches.params.gatetogatechunk_threshold = 1;
switches.params.gatechunktogate_threshold = 1;
switches.params.antiHebbFactor = 0.99;
switches.params.learningRate = 100; %100
switches.params.randomTrialDist = 1;
switches.params.trace_learningRate = 10; %0.1; %0.001; % 0.0001
switches.params.gate_sparseness = 99;
switches.params.gate_slope = 1000;
switches.params.eta = 0.0;