#  DAKOTA INPUT FILE - dakota_matlab_rosenbrock.in
#  This sample Dakota input file optimizes the Rosenbrock function.
#  See p. 95 in Practical Optimization by Gill, Murray, and Wright.
#  
# Here we use either the 
#   matlab_rosen_bb_simulator.sh (Unix) or 
#   matlab_rosen_bb_simulator.vbs (Windows)
# analysis driver that calls Matlab for each function evaluation


environment,
tabular_data
results_output

method,
seed = 11011011
                                         
#efficient_global


#multidim_parameter_study 
#partitions = 100

list_parameter_study
list_of_points = 20 40 80 150 300 600 1200 2600 5000




## for evolutionary algorithm
#coliny_ea
#max_iterations = 100
#max_function_evaluations = 1000
#population_size = 60
#fitness_type merit_function
#mutation_type offset_normal
#mutation_rate 1.0
#crossover_type two_point
#crossover_rate 0.1
#replacement_type chc = 10	


#coliny_pattern_search
#max_iterations = 100
#max_function_evaluations = 200
#solution_accuracy = 1e-4
#initial_delta = 0.01
#threshold_delta = 1e-4
#exploratory_moves basic_pattern
#contraction_factor = 0.75


	
variables,
  continuous_design = 1   
  #cdv_initial_point               0.5          
  #cdv_lower_bounds                    0.001      
  #cdv_upper_bounds                    1         
  cdv_descriptor           'learner_sw.steps'   

interface,					

# common options
	fork,
	parameters_file = 'params.in'		
	results_file    = 'results.out'		

# Use this line for Linux
	analysis_driver = 'MBMC_dakota_shell.sh'	

# OR use this line for Windows
##	analysis_driver = 'cscript matlab_rosen_bb_simulator.vbs'	

# POSSIBLY use the following to perform 2 or more simultaneous Matlab
# evaluations.  I haven't researched whether the automation
# server supports this asynchronously, or whether one evaluation will
# block the next (seems to work though)
##       asynchronous                            
##       evaluation_concurrency = 2
##	 file_tag                                
# use this to keep parameters/results files around if you wish (when
# using file_tag only)
##	file_save                               


responses,                                      
	num_objective_functions = 1  
    sense = 'max'
 	no_gradients
	no_hessians
